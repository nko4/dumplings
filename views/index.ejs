<!DOCTYPE html>
<meta charset="utf-8">
<title>nko</title>
<link href="styles/default.css" type="text/css" rel="stylesheet"/>

<script src="scripts/vendor/jquery.min.js"></script>
<script src="scripts/vendor/jquery-ui.min.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script type="text/javascript">
    // self-invoke function expr - start loading...
    (function (exports) {
        var nko_vote, socket;

        // define colorful logger
        function log(string, type) {
            var args = [
                '%c %c %c ' + string + ' %c %c ',
                'background: ' + (type ? '#FFB819' : '#343434'),
                'background: ' + (type ? '#E85D0C' : '#4e4e4e'),
                'color: ' + (type ? '#fff' : '#eee') + '; background: ' + (type ? '#E83C10' : '#696969'),
                'background: ' + (type ? '#E85D0C' : '#4e4e4e'),
                'background: ' + (type ? '#FFB819' : '#343434')
            ];
            return console.log.apply(console, args);
        }

        if (<%= isProduction %>) {
            console.groupCollapsed('Start "nko" application in production');
            socket = io.connect('http://dumplings.2013.nodeknockout.com/');
        } else {
        	var socket_path = location.protocol + '//' + location.hostname + ':' + location.port + '/';
            console.groupCollapsed('Start "nko" application in development on ' + socket_path);
            socket = io.connect(socket_path);
        }

        // make public
        exports.socket = socket;
        exports.log = log;



        current_player = false;
        exports.current_player = current_player;


        exports.chuj = function() {

            socket.emit('play')


            socket.on('play',function(id,x,y) {
    			
    			current_player = app.addPlayer(id,true);
    			socket.emit('pm', current_player.tile.x , current_player.tile.y);

            });


            exports.player_move = function(x,y) {
            	socket.emit('pm',x,y);
            }


            socket.on('leave', function(player) {
                app.terminateOpponent(player);
                console.log('opponent '+player+' terminated');
            });

            socket.on('pm',function(players) {
            	console.log(players);
            	players.forEach(function(player) {

            		// console.log('player-'+player.id+'-x-'+player.x+'-y-'+player.y);
                    try {
                        var obj = app.getPlayerById(player.id);
                    } catch(err) {
                        var obj = app.addOpponent(player.id);
                    }

                    if (current_player.id != player.id) {
                        obj.move(player.x,player.y);
                    }


            	});
            })








        };

    }(this));

</script>
<script data-main="scripts/main" src="scripts/vendor/require.js"></script>

<div id="vote">
    <iframe src="http://nodeknockout.com/iframe/dumplings" frameborder=0 scrolling=no allowtransparency=true width=115 height=25></iframe>
</div>
